#!/usr/bin/env ruby

require 'RMagick'
require 'getoptlong'
require 'falldown/mjpeg'

opts = GetoptLong.new(
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
  [ '--fps', '-f', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--resolution', '-r', GetoptLong::REQUIRED_ARGUMENT ]
)

fps = 16
resolution = '320x240'
opts.each do |opt, arg|
  case opt
  when '--help'
    puts "Usage: $0 [--fps <frame rate>] [--resolution <width>x<height>] <camera> [camera...]"
    exit!
  when '--fps'
    fps = arg
  when '--resolution'
    resolution = arg
  end
end

streamer = Falldown::Mjpeg.new
ARGV.each do |cam_host|
  streamer << "http://#{cam_host}/axis-cgi/mjpg/video.cgi?fps=#{fps}&resolution=#{resolution}"
end

frames = {}
Signal.trap('INT') do
  puts 'Dumping GIFs.  This will take a while.'
  streamer.stop

  frames.keys.each do |cam_url|
    cam_name = cam_url.sub(/http:\/\/(.*?)[\.\/].*/, '\1')
    puts "Building GIF for #{cam_name}..."

    capture = Magick::ImageList.new
    frames[cam_url].each {|f| capture.push(Magick::Image.from_blob(f).first) }
    capture.write("/tmp/#{cam_name}.gif")
    puts '  done'
  end

  exit!
end

streamer.go do |url, frame|
  frames[url] ||= []
  frames[url] << frame
  frames[url].shift if frames[url].size > fps*120
end

